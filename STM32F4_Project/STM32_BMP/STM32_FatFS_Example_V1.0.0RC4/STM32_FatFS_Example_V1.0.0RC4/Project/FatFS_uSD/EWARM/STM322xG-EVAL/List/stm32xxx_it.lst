###############################################################################
#
# IAR ANSI C/C++ Compiler V7.20.2.7424/W32 for ARM        26/Aug/2015  14:26:03
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\stm32xxx_it.c
#    Command line =  
#        "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\stm32xxx_it.c"
#        -D USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_STM322xG_EVAL -lcN
#        "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\STM322xG-EVAL\List\"
#        -o "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\STM322xG-EVAL\Obj\"
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.20.2\arm\INC\c\DLib_Config_Full.h" -I "D:\Sample Code\Manta\2015 ARM
#        Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\Devices\STM32F2xx\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Core\inc\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Libraries\STM32_USB_HOST_Library\Class\MSC\inc\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Libraries\CMSIS\Device\ST\STM32F2xx\Include\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Utilities\STM32_EVAL\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Utilities\STM32_EVAL\Common\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Utilities\STM32_EVAL\STM322xG_EVAL\"
#        -I "D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\..\..\..\Utilities\Third_Party\fat_fs\inc\"
#        -Oh --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.20.2\arm\CMSIS\Include\"
#    List file    =  
#        D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\STM322xG-EVAL\List\stm32xxx_it.lst
#    Object file  =  
#        D:\Sample Code\Manta\2015 ARM Design
#        Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\EWARM\STM322xG-EVAL\Obj\stm32xxx_it.o
#
###############################################################################

D:\Sample Code\Manta\2015 ARM Design Contest\STM32_FatFS_Example_V1.0.0RC4\STM32_FatFS_Example_V1.0.0RC4\Project\FatFS_uSD\stm32xxx_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32xxx_it.c
      4            * @author  MCD Application Team
      5            * @version V1.0.0RC4
      6            * @date    21-December-2012
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and
      9            *          peripherals interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     14            *
     15            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     16            * You may not use this file except in compliance with the License.
     17            * You may obtain a copy of the License at:
     18            *
     19            *        http://www.st.com/software_license_agreement_liberty_v2
     20            *
     21            * Unless required by applicable law or agreed to in writing, software 
     22            * distributed under the License is distributed on an "AS IS" BASIS, 
     23            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     24            * See the License for the specific language governing permissions and
     25            * limitations under the License.
     26            *
     27            ******************************************************************************
     28            */
     29          
     30          /* Includes ------------------------------------------------------------------*/
     31           #include "global_includes.h"
     32          
     33          /* Private typedef -----------------------------------------------------------*/
     34          /* Private define ------------------------------------------------------------*/
     35          /* Private macro -------------------------------------------------------------*/
     36          /* Private variables ---------------------------------------------------------*/
     37          /* Private function prototypes -----------------------------------------------*/
     38          /* Private function prototypes -----------------------------------------------*/
     39          /* Private functions ---------------------------------------------------------*/
     40          
     41          /******************************************************************************/
     42          /*             Cortex-M Processor Exceptions Handlers                         */
     43          /******************************************************************************/
     44          
     45          /**
     46            * @brief  This function handles NMI exception.
     47            * @param  None
     48            * @retval None
     49            */
     50          void NMI_Handler(void)
     51          {}
     52          
     53          /**
     54            * @brief  This function handles Hard Fault exception.
     55            * @param  None
     56            * @retval None
     57            */
     58          void HardFault_Handler(void)
     59          {
     60            /* Go to infinite loop when Hard Fault exception occurs */
     61            while (1)
     62            {}
     63          }
     64          
     65          /**
     66            * @brief  This function handles Memory Manage exception.
     67            * @param  None
     68            * @retval None
     69            */
     70          void MemManage_Handler(void)
     71          {
     72            /* Go to infinite loop when Memory Manage exception occurs */
     73            while (1)
     74            {}
     75          }
     76          
     77          /**
     78            * @brief  This function handles Bus Fault exception.
     79            * @param  None
     80            * @retval None
     81            */
     82          void BusFault_Handler(void)
     83          {
     84            /* Go to infinite loop when Bus Fault exception occurs */
     85            while (1)
     86            {}
     87          }
     88          
     89          /**
     90            * @brief  This function handles Usage Fault exception.
     91            * @param  None
     92            * @retval None
     93            */
     94          void UsageFault_Handler(void)
     95          {
     96            /* Go to infinite loop when Usage Fault exception occurs */
     97            while (1)
     98            {}
     99          }
    100          
    101          /**
    102            * @brief  This function handles Debug Monitor exception.
    103            * @param  None
    104            * @retval None
    105            */
    106          void DebugMon_Handler(void)
    107          {}
    108          
    109          /**
    110            * @brief  This function handles SVCall exception.
    111            * @param  None
    112            * @retval None
    113            */
    114          void SVC_Handler(void)
    115          {}
    116          
    117          /**
    118            * @brief  This function handles PendSV_Handler exception.
    119            * @param  None
    120            * @retval None
    121            */
    122          void PendSV_Handler(void)
    123          {}
    124          
    125          /**
    126            * @brief  This function handles SysTick Handler.
    127            * @param  None
    128            * @retval None
    129            */
    130          void SysTick_Handler(void)
    131          {}
    132          
    133          /**
    134            * @brief  This function handles SDIO global interrupt request.
    135            * @param  None
    136            * @retval None
    137            */
    138          void SDIO_IRQHandler(void)
    139          {
    140            /* Process All SDIO Interrupt Sources */
    141            SD_ProcessIRQSrc();
    142          }
    143          
    144          /**
    145            * @brief  This function handles DMA2 Stream3 or DMA2 Stream6 global interrupts
    146            *         requests.
    147            * @param  None
    148            * @retval None
    149            */
    150          void SD_SDIO_DMA_IRQHANDLER(void)
    151          {
    152            /* Process DMA2 Stream3 or DMA2 Stream6 Interrupt Sources */
    153            SD_ProcessDMAIRQ();
    154          }
    155          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DMA2_Stream3_IRQHandler
         0   -> SD_ProcessDMAIRQ
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SDIO_IRQHandler
         0   -> SD_ProcessIRQSrc
       0   SVC_Handler
       0   SysTick_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       4  DMA2_Stream3_IRQHandler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       4  SDIO_IRQHandler
       2  SVC_Handler
       2  SysTick_Handler
       2  UsageFault_Handler

 
 26 bytes in section .text
 
 26 bytes of CODE memory

Errors: none
Warnings: none

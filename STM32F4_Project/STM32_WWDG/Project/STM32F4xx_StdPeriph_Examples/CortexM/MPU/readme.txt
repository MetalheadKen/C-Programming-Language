/**
  @page CortexM4_MPU CortexM4 MPU example
  
  @verbatim
  ******************** (C) COPYRIGHT 2013 STMicroelectronics *******************
  * @file    CortexM4/MPU/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    18-January-2013
  * @brief   Description of the CortexM4 MPU example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example presents the MPU features on STM32F4xx devices and it can be easily
ported to any other STM32 device supporting MPU.

The example purpose is to configure a memory region as privileged read only region
and tries to perform read and write operation in different mode.

If the access is permitted LED1 is toggling. If the access is not permitted, 
a memory management fault is generated and LED2 is ON.
To generate an MPU memory fault exception due to an access right error, uncomment
the following line "PrivilegedReadOnlyArray[0] = 'e';" in the "stm32_mpu.c" file.


@par Directory contents 

  - CortexM/MPU/stm32f4xx_conf.h     Library Configuration file
  - CortexM/MPU/stm32f4xx_it.c       Interrupt handlers
  - CortexM/MPU/stm32f4xx_it.h       Header for stm32f4xx_it.c 
  - CortexM/MPU/main.c               Main program
  - CortexM/MPU/main.h               Header for main.c module
  - CortexM/MPU/system_stm32f4xx.c   STM32F4xx system source file
  - CortexM/MPU/stm32_mpu.c          Cortex-M4 MPU regions Access rights file
  - CortexM/MPU/stm32_mpu.h          Header for stm32_mpu.c module
        
@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>



@par Hardware and Software environment
  
  - This example runs on STM32F40xx/STM32F41xx, STM32F427x/STM32F437x Devices.
  
  - This example has been tested with STMicroelectronics STM324xG-EVAL (STM32F40xx/
    STM32F41xx Devices) and STM32437I-EVAL (STM32F427x/STM32F437x Devices) evaluation 
    boards and can be easily tailored to any other supported device and development 
    board.


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain and setup your project configuration as follows
 - Add the required example files
   - stm32_mpu.c
<ul>
- For RIDE and TrueSTUDIO toolchains you have to follow these instructions

    <li> RIDE 
        - In the Application options -> script menu, set "Use Default Script File" 
          to "No" and use "stm32F_flash_ROAarray.ld" as Script File. 
          This linker is configured for STM32F4xx. It should be updated to use it
          with other STM32 devices.      
        

    <li> TrueSTUDIO 
          - In the project properties window, select C/C++ Build->settings node then 
           the C Linker->General node and use "stm32F_flash_ROAarray.ld" as Script File.
          This linker is configured for STM32F4xx. It should be updated to use it
          with other STM32 devices.         
</ul>    
 
 - Rebuild all files and load your image into target memory
 - Run the example


    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

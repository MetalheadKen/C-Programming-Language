/**
  @page NVIC_IRQ_Priority NVIC IRQ Priority example
  
  @verbatim
  ******************** (C) COPYRIGHT 2013 STMicroelectronics *******************
  * @file    NVIC/NVIC_IRQPriority/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    18-January-2013
  * @brief   Description of the NVIC IRQ Priority example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

  This example demonstrates the use of the Nested Vectored Interrupt Controller (NVIC): 

  - Configuration of 2 EXTI Lines (WAKEUP button EXTI Line & KEY button EXTI Line)
    to generate an interrupt on each falling edge and use the SysTick interrupt.
  - These interrupts are configured with the following parameters:
    - WAKEUP button EXTI Line:  
      - Preemption Priority = ubPreemptionPriorityValue
      - SubPriority = 0
    - KEY button EXTI Line:    
      - Preemption Priority = 0
      - SubPriority = 1           
    - SysTick Handler:  
      - Preemption Priority = !ubPreemptionPriorityValue
      - SubPriority = 0  
                 
  First, the "ubPreemptionPriorityValue" is equal to 0, the WAKEUP button EXTI Line 
  has higher preemption priority than the SysTick handler. 

  In the KEY button EXTI Line interrupt routine the WAKEUP button EXTI Line and 
  SysTick preemption priorities are inverted. 
  In the WAKEUP button EXTI Line interrupt routine, the pending bit of the SysTick 
  interrupt is set. This will cause SysTick ISR to preempt the WAKEUP button EXTI 
  Line ISR only if it has higher preemption priority.

  The system behaves as following:
 
  1) The first time KEY button EXTI Line interrupt occurs, the SysTick preemption 
  becomes higher than WAKEUP button EXTI Line one. So when the WAKEUP button EXTI 
  Line interrupt occurs, the SysTick ISR is executed and the "ubPreemptionOccured" 
  variable become TRUE and the four leds (LED1, LED2, LED3, LED4) start toggling.

  2) When the next KEY button EXTI Line interrupt occurs, the SysTick preemption
  becomes lower than WAKEUP button EXTI Line one. So when the WAKEUP button EXTI 
  Line interrupt occurs, the "ubPreemptionOccured" variable became FALSE and the four 
  leds (LED1, LED2, LED3, LED4) stop toggling.

  Then this behavior is repeated from point 1) in an infinite loop.


@par Directory contents 

  - NVIC/NVIC_IRQPriority/stm32f4xx_conf.h     Library Configuration file
  - NVIC/NVIC_IRQPriority/stm32f4xx_it.c       Interrupt handlers
  - NVIC/NVIC_IRQPriority/stm32f4xx_it.h       Interrupt handlers header file
  - NVIC/NVIC_IRQPriority/main.h               Header for main.c module  
  - NVIC/NVIC_IRQPriority/main.c               Main program
  - NVIC/NVIC_IRQPriority/system_stm32f4xx.c   STM32F4xx system source file
  
@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>


@par Hardware and Software environment

  - This example runs on STM32F40xx/STM32F41xx, STM32F427x/STM32F437x Devices.
  
  - This example has been tested with STMicroelectronics STM324xG-EVAL (STM32F40xx/
    STM32F41xx Devices) and STM32437I-EVAL (STM32F427x/STM32F437x Devices) evaluation 
    boards and can be easily tailored to any other supported device and development 
    board.

  - STM324xG-EVAL/STM32437I-EVAL Set-up
    - Use LED1, LED2, LED3 and LED4 connected respectively to PG.06, PG.08, PI.09
      and PC.07 pins
    - Use the WAKEUP push-button connected to pin PA.00 (EXTI Line0).
    - Use the KEY push-button connected to pin PG15 (EXTI Line15)
    
      
@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example


    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

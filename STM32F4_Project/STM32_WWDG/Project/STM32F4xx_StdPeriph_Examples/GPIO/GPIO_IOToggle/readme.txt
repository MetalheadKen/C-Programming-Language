/**
  @page GPIO_IOToggle GPIO IO Toggle example
  
  @verbatim
  ******************** (C) COPYRIGHT 2013 STMicroelectronics *******************
  * @file    GPIO/IOToggle/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    18-January-2013
  * @brief   Description of the GPIO IO Toggle example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

  GPIO ports are connected on AHB bus, using BSRRH and BSRRL registers, one cycle 
  is required to set a pin and another cycle to reset it. So GPIO pins can toggle 
  at AHB clock divided by 2.

  This example describes how to use BSRRH and BSRRL (Port Bit Set/Reset Register
  High and Low) for maximum IO toggling.

  PG6 and PG8 (configured in output pushpull mode) toggles in a forever loop:
  - Set PG6 and PG8 by setting corresponding bits in BSRRL register
  - Reset PG6 and PG8 by setting corresponding bits in BSRRH register

  In this example, HCLK is configured at 168 MHz so PG6 and PG8 toggle at 84MHz.
  To achieve the maximum IO toggling frequency, you have to configure your compiler
  options for high speed optimization.


@par Directory contents 

  - GPIO/IOToggle/stm32f4xx_conf.h     Library Configuration file
  - GPIO/IOToggle/stm32f4xx_it.c       Interrupt handlers
  - GPIO/IOToggle/stm32f4xx_it.h       Interrupt handlers header file
  - GPIO/IOToggle/main.h               Header for main.c  
  - GPIO/IOToggle/main.c               Main program
  - GPIO/IOToggle/system_stm32f4xx.c   STM32F4xx system source file

@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3988 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>


@par Hardware and Software environment

  - This example runs on STM32F40xx/STM32F41xx, STM32F427x/STM32F437x Devices.
    
  - This example has been tested with STMicroelectronics STM324xG-EVAL (STM32F40xx/
    STM32F41xx Devices) and STM32437I-EVAL (STM32F427x/STM32F437x Devices) evaluation 
    boards and can be easily tailored to any other supported device and development 
    board.      

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example


    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */

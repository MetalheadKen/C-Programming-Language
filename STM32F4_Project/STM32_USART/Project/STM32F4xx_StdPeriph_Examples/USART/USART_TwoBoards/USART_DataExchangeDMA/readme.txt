/**
  @page USART_DataExchangeDMA USART Communication Boards Data Exchange using DMA example
  
  @verbatim
  ******************** (C) COPYRIGHT 2013 STMicroelectronics *******************
  * @file    USART/USART_TwoBoards/USART_DataExchangeDMA/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.0
  * @date    18-January-2013
  * @brief   Description of the USART Communication Boards Data Exchange using 
  *          DMA example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
  @endverbatim

@par Example Description 

This example provides a small application in which Tamper button is used 
to trigger USART communications using DMA and though using USART firmware library.

- Hardware Description

To use this example, you need to load it on two STM32 boards (let's call them 
BoardA and BoardB) then connect these two boards through USART lines and GND.
In the firmware example uncomment the dedicated line in the main.h file to use
the USART peripheral as STM32 Transmitter or as STM32 Receiver device.

@verbatim
*------------------------------------------------------------------------------*
|                BoardA                                  BoardB                |
|         ____________________                   ____________________          |
|        |                    |                 |                    |         |
|        |                    |                 |                    |         | 
|        |     __________     |                 |     __________     |         |
|        |    |   USART  |____|TX_____________RX|____|   USART  |    |         |
|        |    |  Device1 |____|RX_____________TX|____|  Device2 |    |         |
|        |    |____TX____|    |                 |    |____RX____|    |         |
|        |                    |                 |                    |         |
|        |  O LD1             |                 |  O LD1             |         |
|        |  O LD2    Tamper   |                 |  O LD2    Tamper   |         |
|        |  O LD3        _    |                 |  O LD3        _    |         |
|        |  O LD4       |_|   |                 |  O LD4       |_|   |         |
|        |                    |                 |                    |         |
|        |             GND O--|-----------------|--O GND             |         |
|        |____________________|                 |____________________|         |
|                                                                              |
|                                                                              |
*------------------------------------------------------------------------------*
@endverbatim

@note
- The connection between the pins should use a common Ground.

- Software Description

At Tamper button press, the USART Transmitter Board sends the TxBuffer to 
the USART Receiver Board
  
  Received data correctness is signaled by LED lightening and though as follow:
 - LED2 is ON when the comparison result between source buffer and destination 
   buffer is passed otherwise LED3 is ON. 

In both boards, the data transfers is managed using the USART Tx/Rx channels DMA requests.

The SysTick is configured to generate interrupt each 10ms. A dedicated counter 
inside the SysTick ISR is used to toggle the LD1 each 100ms indicating that the 
firmware is running.
These operations can be repeated infinitely.
   
@par Directory contents 

  - USART/USART_TwoBoards/USART_DataExchangeDMA/stm32f4xx_conf.h    Library Configuration file
  - USART/USART_TwoBoards/USART_DataExchangeDMA/stm32f4xx_it.c      Interrupt handlers
  - USART/USART_TwoBoards/USART_DataExchangeDMA/stm32f4xx_it.h      Interrupt handlers header file
  - USART/USART_TwoBoards/USART_DataExchangeDMA/main.c              Main program
  - USART/USART_TwoBoards/USART_DataExchangeDMA/main.h              Main program header file
  - USART/USART_TwoBoards/USART_DataExchangeDMA/system_stm32f4xx.c  STM32F4xx system source file
  
@note The "system_stm32f4xx.c" is generated by an automatic clock configuration 
      tool and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32F4xx_Clock_Configuration_V1.1.0.xls" tool. 

         
@par Hardware and Software environment  
  - This example runs on STM32F40xx/STM32F41xx, STM32F427x/STM32F437x Devices.
    
  - This example has been tested with STMicroelectronics STM324xG-EVAL (STM32F40xx/
    STM32F41xx Devices) and STM32437I-EVAL (STM32F427x/STM32F437x Devices) evaluation 
    boards and can be easily tailored to any other supported device and development 
    board.

  - STM324xG-EVAL and STM32437I-EVAL Set-up
    - Use LED1, LED2 and LED3 connected respectively to PG.06, PG.08 and
      PI.09 pins
    - Use the Tamper button 
    - Connect BoardA USART3 TX pin (PC.10) to BoardB USART3 RX pin (PC.11)
    - Connect BoardA USART3 RX pin (PC.11) to BoardB USART3 TX pin (PC.10)


@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32F4xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */
